<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.adamd</groupId>
	<artifactId>springboot_web_starter</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>ui</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.0.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<jasmine.serverPort>6000</jasmine.serverPort>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>angularjs</artifactId>
			<version>1.5.8</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>3.3.7-1</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jasmine</artifactId>
			<version>2.4.1-1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>webjars-locator</artifactId>
		</dependency>

	</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- Jasmine works with saga plugin for coverage, it will wait for the 
				plugin to harvest the results before shutting down -->
			<plugin>
				<groupId>com.github.searls</groupId>
				<artifactId>jasmine-maven-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<id>start-frontend-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<additionalContexts>
						<context>
							<contextRoot>/lib</contextRoot>
							<directory>${project.build.directory}/classes/static/js</directory>
						</context>
					</additionalContexts>
					<preloadSources>
						<source>webjars/angularjs/angular.min.js</source>
						<source>webjars/angularjs/angular-route.min.js</source>
						<source>webjars/angularjs/angular-cookies.min.js</source>
						<source>webjars/angularjs/angular-mocks.js</source>
					</preloadSources>
					<jsSrcDir>${project.basedir}/src/main/resources/static/js</jsSrcDir>
					<jsTestSrcDir>${project.basedir}/src/test/resources/static/js</jsTestSrcDir>
					<!-- See: http://phantomjs.org/; this plugin makes use of the core of: 
						http://kylelieber.com/phantomjs-maven-plugin to download the headless webkit -->
					<phantomjs>
						<version>2.1.1</version>
					</phantomjs>
					<keepServerAlive>true</keepServerAlive>
					<mvnTestSkip>${maven.test.skip}</mvnTestSkip>
				</configuration>
			</plugin>

			<!-- Works with jasmin plugin, with collect coverage. Jasmine needs to 
				have keepServerAlive set to true. -->
			<plugin>
				<groupId>com.github.timurstrekalov</groupId>
				<artifactId>saga-maven-plugin</artifactId>
				<version>1.5.5</version>
				<executions>
					<execution>
						<goals>
							<goal>coverage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skipTests>${maven.test.skip}</skipTests>
					<baseDir>http://localhost:${jasmine.serverPort}</baseDir>
					<outputDir>${project.build.directory}/jasmine/coverage</outputDir>
					<noInstrumentPatterns>
						<!-- These are regex patterns -->
						<pattern>.*/webjars/.*</pattern>
						<pattern>.*/static/libs/.*</pattern>
						<pattern>.*/spec/.*</pattern>
						<pattern>.*/.*[s|S]pec.*</pattern>
					</noInstrumentPatterns>
				</configuration>
			</plugin>
		</plugins>
	</build>


</project>
